# Generated by Django 4.2.7 on 2025-06-08 04:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('chatbots', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('type', models.CharField(choices=[('webhook', 'Webhook'), ('api', 'API Externa'), ('database', 'Banco de Dados'), ('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('slack', 'Slack'), ('discord', 'Discord'), ('zapier', 'Zapier'), ('make', 'Make (Integromat)'), ('custom', 'Personalizada')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('error', 'Erro'), ('testing', 'Testando')], default='inactive', max_length=20)),
                ('config', models.JSONField(default=dict, verbose_name='Configurações')),
                ('credentials', models.JSONField(default=dict, verbose_name='Credenciais')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('chatbots', models.ManyToManyField(blank=True, related_name='integrations', to='chatbots.chatbot')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Integração',
                'verbose_name_plural': 'Integrações',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL do Webhook')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], default='POST', max_length=10)),
                ('headers', models.JSONField(default=dict, verbose_name='Headers HTTP')),
                ('secret_token', models.CharField(blank=True, max_length=255, verbose_name='Token Secreto')),
                ('verify_ssl', models.BooleanField(default=True, verbose_name='Verificar SSL')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Máximo de Tentativas')),
                ('retry_delay', models.PositiveIntegerField(default=60, verbose_name='Delay entre Tentativas (segundos)')),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='webhook', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Webhook',
                'verbose_name_plural': 'Webhooks',
            },
        ),
        migrations.CreateModel(
            name='IntegrationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('category', models.CharField(choices=[('communication', 'Comunicação'), ('crm', 'CRM'), ('ecommerce', 'E-commerce'), ('analytics', 'Analytics'), ('automation', 'Automação'), ('storage', 'Armazenamento'), ('payment', 'Pagamento'), ('social', 'Redes Sociais'), ('productivity', 'Produtividade'), ('other', 'Outros')], max_length=20)),
                ('type', models.CharField(choices=[('webhook', 'Webhook'), ('api', 'API Externa'), ('database', 'Banco de Dados'), ('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('slack', 'Slack'), ('discord', 'Discord'), ('zapier', 'Zapier'), ('make', 'Make (Integromat)'), ('custom', 'Personalizada')], max_length=20)),
                ('config_template', models.JSONField(verbose_name='Template de Configuração')),
                ('credentials_template', models.JSONField(verbose_name='Template de Credenciais')),
                ('icon', models.CharField(blank=True, max_length=100, verbose_name='Ícone')),
                ('documentation_url', models.URLField(blank=True, verbose_name='URL da Documentação')),
                ('is_public', models.BooleanField(default=True, verbose_name='Público')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='Contador de Uso')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template de Integração',
                'verbose_name_plural': 'Templates de Integrações',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('execution_id', models.UUIDField(blank=True, null=True, verbose_name='ID da Execução')),
                ('action', models.CharField(max_length=100, verbose_name='Ação')),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='info', max_length=20)),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('request_data', models.JSONField(blank=True, null=True, verbose_name='Dados da Requisição')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='Dados da Resposta')),
                ('status_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Código de Status')),
                ('duration', models.FloatField(blank=True, null=True, verbose_name='Duração (segundos)')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Log de Integração',
                'verbose_name_plural': 'Logs de Integrações',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ApiConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField(verbose_name='URL Base da API')),
                ('auth_type', models.CharField(choices=[('none', 'Nenhuma'), ('basic', 'Basic Auth'), ('bearer', 'Bearer Token'), ('api_key', 'API Key'), ('oauth2', 'OAuth 2.0'), ('custom', 'Personalizada')], default='none', max_length=20)),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API Key')),
                ('api_secret', models.CharField(blank=True, max_length=255, verbose_name='API Secret')),
                ('access_token', models.TextField(blank=True, verbose_name='Access Token')),
                ('refresh_token', models.TextField(blank=True, verbose_name='Refresh Token')),
                ('default_headers', models.JSONField(default=dict, verbose_name='Headers Padrão')),
                ('timeout', models.PositiveIntegerField(default=30, verbose_name='Timeout (segundos)')),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='api_connection', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Conexão API',
                'verbose_name_plural': 'Conexões API',
            },
        ),
    ]
